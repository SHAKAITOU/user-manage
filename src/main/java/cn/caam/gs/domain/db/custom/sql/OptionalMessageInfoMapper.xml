<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.caam.gs.domain.db.custom.mapper.OptionalMessageInfoMapper">
	<!-- RESULT MAP -->
    <resultMap id="MessageInfoForm" 
                type="cn.caam.gs.domain.db.custom.entity.MessageInfo">
        <id property="id" column="id"/>
        <result property="userName"      column="userName"/>
        <result property="userCode"      column="userCode"/>
        <result property="msgTypeName"   column="msgTypeName"/>
        <result property="readSts"       column="readSts"/>
        
        <association property="message" 
            resultMap="cn.caam.gs.domain.db.base.mapper.MMessageMapper.BaseResultMap">
            <id column="id" property="id" />
        </association>
        <association property="messageRead" 
            resultMap="MessageRead">
            <id column="mr_id" property="id" />
        </association>
    </resultMap>
    <resultMap id="MessageRead" type="cn.caam.gs.domain.db.base.entity.MMessageRead">
    	<id     column="mr_id" property="id" jdbcType="VARCHAR" />
    	<result column="mr_user_id" property="userId"  jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="baseSelect">
	    mm.*,
	    mu.name AS userName,
	    muc.user_code AS userCode,
	    F0021.name   AS msgTypeName
    </sql>
    <sql id="baseJoin">
        LEFT JOIN m_user mu ON mm.user_id = mu.id
    	LEFT JOIN m_user_card muc ON mu.id = muc.user_id AND muc.valid_status='1'
		LEFT JOIN m_fixed_value F0021   ON mm.msg_type        = F0021.value   AND F0021.code   = 'F0021'
    </sql>
    <sql id="baseCondition">
    	<if test="message != null and message.msgType != null and message.msgType != '' and message.msgType != '00' " >
	        and mm.msg_type = #{message.msgType, jdbcType=NVARCHAR}
		</if>
		<if test="message != null and message.title != null and message.title != '' " >
	        and mm.title like concat(concat('%', #{message.title, jdbcType=NVARCHAR}), '%') 
		</if>
		<if test="message != null and message.userId != null and message.userId != ''" >
	        and mm.user_id =#{message.userId, jdbcType=NVARCHAR}
		</if>
		<if test="userName != null and userName != ''" >
	        and mu.name like concat(concat('%', #{userName, jdbcType=NVARCHAR}), '%') 
		</if>
		<if test="userCode != null and userCode != ''" >
	        and muc.user_code like concat(concat('%', #{userCode, jdbcType=NVARCHAR}), '%') 
		</if>
    	<if test="registDateFrom != null and registDateFrom != ''" >
	        <![CDATA[
	        	and STR_TO_DATE(mm.regist_date, '%Y-%m-%d %T') >= STR_TO_DATE(concat(#{registDateFrom, jdbcType=NVARCHAR}, ' 00:00:00'), '%Y-%m-%d %T')
	        ]]>
		</if>
		<if test="registDateTo != null and registDateTo != ''" >
	        <![CDATA[
	        	and STR_TO_DATE(mm.regist_date, '%Y-%m-%d %T') <= STR_TO_DATE(concat(#{registDateTo, jdbcType=NVARCHAR}, ' 23:59:59'), '%Y-%m-%d %T')
	        ]]>
		</if>
	</sql>
    <!-- SQL CHIP -->
	<select id="getMessageListCount" resultType="int">
		SELECT COUNT(mm.id)
		FROM
		    m_message mm 
		    <include refid="baseJoin"/>
		WHERE
		    1=1
		    <include refid="baseCondition"/>
	</select>
	
	<!-- SQL CHIP -->
	<select id="getUserMessageListCount" resultType="int">
		SELECT COUNT(mm.id)
		FROM
		    m_message mm 
		WHERE
		    mm.user_id = #{userId, jdbcType=NVARCHAR} OR mm.user_id is null
		    
	</select>
	<!-- SQL CHIP -->
	<select id="getMessageList" resultMap="MessageInfoForm">
        SELECT
		    <include refid="baseSelect"/>
		FROM
		    m_message mm 
			<include refid="baseJoin"/>
			WHERE
		    1=1
		    <include refid="baseCondition"/>
		ORDER BY mm.regist_date DESC
		LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <!-- SQL CHIP -->
    <select id="getUserMessageUnReadCnt" resultType="int">
        SELECT COUNT(main.id)
        FROM (
	        SELECT
			    mm.id,
			    case when mr.id is null then false else true end AS readSts
			FROM
			    m_message mm 
				LEFT JOIN m_message_read mr ON mm.id = mr.id
				WHERE
			    mm.user_id = #{userId, jdbcType=NVARCHAR} OR mm.user_id is null
	    ) AS main
	    WHERE main.readSts = false
    </select>
    
	<select id="getUserMessageList" resultMap="MessageInfoForm">
        SELECT
		    <include refid="baseSelect"/>,
		    mr.id AS mr_id,
		    mr.user_id AS mr_user_id,
		    case when mr.id is null then false else true end AS readSts
		FROM
		    m_message mm 
			<include refid="baseJoin"/>
			LEFT JOIN m_message_read mr ON mm.id = mr.id
			WHERE
		    mm.user_id = #{userId, jdbcType=NVARCHAR} OR mm.user_id is null
		ORDER BY readSts, mm.regist_date DESC
		LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="getMessageRead" resultMap="MessageRead">
        SELECT
		    mr.id AS mr_id,
		    mr.user_id AS mr_user_id
		FROM
		    m_message_read mr 
			WHERE
		    mr.user_id = #{userId, jdbcType=NVARCHAR}
			AND mr.id = #{msgId, jdbcType=NVARCHAR}
    </select>
    
        
</mapper>